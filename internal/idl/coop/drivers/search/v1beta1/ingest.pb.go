// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: coop/drivers/search/v1beta1/ingest.proto

package v1beta1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IngestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payloads:
	//	*IngestRequest_Drivers
	Payloads isIngestRequest_Payloads `protobuf_oneof:"payloads"`
}

func (x *IngestRequest) Reset() {
	*x = IngestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestRequest) ProtoMessage() {}

func (x *IngestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestRequest.ProtoReflect.Descriptor instead.
func (*IngestRequest) Descriptor() ([]byte, []int) {
	return file_coop_drivers_search_v1beta1_ingest_proto_rawDescGZIP(), []int{0}
}

func (m *IngestRequest) GetPayloads() isIngestRequest_Payloads {
	if m != nil {
		return m.Payloads
	}
	return nil
}

func (x *IngestRequest) GetDrivers() *IngestDriversRequest {
	if x, ok := x.GetPayloads().(*IngestRequest_Drivers); ok {
		return x.Drivers
	}
	return nil
}

type isIngestRequest_Payloads interface {
	isIngestRequest_Payloads()
}

type IngestRequest_Drivers struct {
	Drivers *IngestDriversRequest `protobuf:"bytes,1,opt,name=drivers,proto3,oneof"`
}

func (*IngestRequest_Drivers) isIngestRequest_Payloads() {}

type IngestDriversRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drivers []*Driver `protobuf:"bytes,1,rep,name=drivers,proto3" json:"drivers,omitempty"`
}

func (x *IngestDriversRequest) Reset() {
	*x = IngestDriversRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestDriversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestDriversRequest) ProtoMessage() {}

func (x *IngestDriversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestDriversRequest.ProtoReflect.Descriptor instead.
func (*IngestDriversRequest) Descriptor() ([]byte, []int) {
	return file_coop_drivers_search_v1beta1_ingest_proto_rawDescGZIP(), []int{1}
}

func (x *IngestDriversRequest) GetDrivers() []*Driver {
	if x != nil {
		return x.Drivers
	}
	return nil
}

type IngestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        int64                  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	IndexUid   string                 `protobuf:"bytes,2,opt,name=index_uid,json=indexUid,proto3" json:"index_uid,omitempty"`
	Status     string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	TaskType   string                 `protobuf:"bytes,4,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	Details    *IngestDetails         `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	Error      *IngestError           `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	Duration   *durationpb.Duration   `protobuf:"bytes,7,opt,name=duration,proto3" json:"duration,omitempty"`
	EnqueuedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=enqueued_at,json=enqueuedAt,proto3" json:"enqueued_at,omitempty"`
	StartedAt  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	FinishedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
}

func (x *IngestResponse) Reset() {
	*x = IngestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestResponse) ProtoMessage() {}

func (x *IngestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestResponse.ProtoReflect.Descriptor instead.
func (*IngestResponse) Descriptor() ([]byte, []int) {
	return file_coop_drivers_search_v1beta1_ingest_proto_rawDescGZIP(), []int{2}
}

func (x *IngestResponse) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *IngestResponse) GetIndexUid() string {
	if x != nil {
		return x.IndexUid
	}
	return ""
}

func (x *IngestResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *IngestResponse) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *IngestResponse) GetDetails() *IngestDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *IngestResponse) GetError() *IngestError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *IngestResponse) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *IngestResponse) GetEnqueuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EnqueuedAt
	}
	return nil
}

func (x *IngestResponse) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *IngestResponse) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

type IngestDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IngestDetails) Reset() {
	*x = IngestDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestDetails) ProtoMessage() {}

func (x *IngestDetails) ProtoReflect() protoreflect.Message {
	mi := &file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestDetails.ProtoReflect.Descriptor instead.
func (*IngestDetails) Descriptor() ([]byte, []int) {
	return file_coop_drivers_search_v1beta1_ingest_proto_rawDescGZIP(), []int{3}
}

type IngestError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType string `protobuf:"bytes,1,opt,name=error_type,json=errorType,proto3" json:"error_type,omitempty"`
	Link      string `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	Message   string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Code      string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *IngestError) Reset() {
	*x = IngestError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestError) ProtoMessage() {}

func (x *IngestError) ProtoReflect() protoreflect.Message {
	mi := &file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestError.ProtoReflect.Descriptor instead.
func (*IngestError) Descriptor() ([]byte, []int) {
	return file_coop_drivers_search_v1beta1_ingest_proto_rawDescGZIP(), []int{4}
}

func (x *IngestError) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *IngestError) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *IngestError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IngestError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

var File_coop_drivers_search_v1beta1_ingest_proto protoreflect.FileDescriptor

var file_coop_drivers_search_v1beta1_ingest_proto_rawDesc = []byte{
	0x0a, 0x28, 0x63, 0x6f, 0x6f, 0x70, 0x2f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x2f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x69, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x63, 0x6f, 0x6f, 0x70,
	0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x28, 0x63, 0x6f, 0x6f, 0x70, 0x2f, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x0d, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x07, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6f, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0x55,
	0x0a, 0x14, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6f, 0x70, 0x2e, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x07, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x22, 0xe6, 0x03, 0x0a, 0x0e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x63, 0x6f, 0x6f, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6f, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x6e, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x6e, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x22, 0x0f,
	0x0a, 0x0d, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x6e, 0x0a, 0x0b, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x51, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65,
	0x76, 0x69, 0x6e, 0x6d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x63, 0x68, 0x65, 0x6e, 0x2f, 0x61,
	0x70, 0x69, 0x2d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x69, 0x64, 0x6c, 0x2f, 0x63, 0x6f, 0x6f, 0x70, 0x2f, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_coop_drivers_search_v1beta1_ingest_proto_rawDescOnce sync.Once
	file_coop_drivers_search_v1beta1_ingest_proto_rawDescData = file_coop_drivers_search_v1beta1_ingest_proto_rawDesc
)

func file_coop_drivers_search_v1beta1_ingest_proto_rawDescGZIP() []byte {
	file_coop_drivers_search_v1beta1_ingest_proto_rawDescOnce.Do(func() {
		file_coop_drivers_search_v1beta1_ingest_proto_rawDescData = protoimpl.X.CompressGZIP(file_coop_drivers_search_v1beta1_ingest_proto_rawDescData)
	})
	return file_coop_drivers_search_v1beta1_ingest_proto_rawDescData
}

var file_coop_drivers_search_v1beta1_ingest_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_coop_drivers_search_v1beta1_ingest_proto_goTypes = []interface{}{
	(*IngestRequest)(nil),         // 0: coop.drivers.search.v1beta1.IngestRequest
	(*IngestDriversRequest)(nil),  // 1: coop.drivers.search.v1beta1.IngestDriversRequest
	(*IngestResponse)(nil),        // 2: coop.drivers.search.v1beta1.IngestResponse
	(*IngestDetails)(nil),         // 3: coop.drivers.search.v1beta1.IngestDetails
	(*IngestError)(nil),           // 4: coop.drivers.search.v1beta1.IngestError
	(*Driver)(nil),                // 5: coop.drivers.search.v1beta1.Driver
	(*durationpb.Duration)(nil),   // 6: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_coop_drivers_search_v1beta1_ingest_proto_depIdxs = []int32{
	1, // 0: coop.drivers.search.v1beta1.IngestRequest.drivers:type_name -> coop.drivers.search.v1beta1.IngestDriversRequest
	5, // 1: coop.drivers.search.v1beta1.IngestDriversRequest.drivers:type_name -> coop.drivers.search.v1beta1.Driver
	3, // 2: coop.drivers.search.v1beta1.IngestResponse.details:type_name -> coop.drivers.search.v1beta1.IngestDetails
	4, // 3: coop.drivers.search.v1beta1.IngestResponse.error:type_name -> coop.drivers.search.v1beta1.IngestError
	6, // 4: coop.drivers.search.v1beta1.IngestResponse.duration:type_name -> google.protobuf.Duration
	7, // 5: coop.drivers.search.v1beta1.IngestResponse.enqueued_at:type_name -> google.protobuf.Timestamp
	7, // 6: coop.drivers.search.v1beta1.IngestResponse.started_at:type_name -> google.protobuf.Timestamp
	7, // 7: coop.drivers.search.v1beta1.IngestResponse.finished_at:type_name -> google.protobuf.Timestamp
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_coop_drivers_search_v1beta1_ingest_proto_init() }
func file_coop_drivers_search_v1beta1_ingest_proto_init() {
	if File_coop_drivers_search_v1beta1_ingest_proto != nil {
		return
	}
	file_coop_drivers_search_v1beta1_driver_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestDriversRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_coop_drivers_search_v1beta1_ingest_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*IngestRequest_Drivers)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coop_drivers_search_v1beta1_ingest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_coop_drivers_search_v1beta1_ingest_proto_goTypes,
		DependencyIndexes: file_coop_drivers_search_v1beta1_ingest_proto_depIdxs,
		MessageInfos:      file_coop_drivers_search_v1beta1_ingest_proto_msgTypes,
	}.Build()
	File_coop_drivers_search_v1beta1_ingest_proto = out.File
	file_coop_drivers_search_v1beta1_ingest_proto_rawDesc = nil
	file_coop_drivers_search_v1beta1_ingest_proto_goTypes = nil
	file_coop_drivers_search_v1beta1_ingest_proto_depIdxs = nil
}
